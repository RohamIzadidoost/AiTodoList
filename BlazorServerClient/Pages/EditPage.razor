@page "/Edit/{ID}"
@inject NavigationManager Navigation
<head>
    <style>
        .body{
            height: 100%;
            background-image: linear-gradient(180deg, rgba(5, 51, 103, 0.273) 0%, #47060669 70%);
        }
    </style>
</head>
<body class="body">
<h1> Name </h1>
<input @bind="_Name"/>
<h2> Descryption </h2>
<input @bind="_Description" />
<h3>Done<input type="checkbox" id="isCompleted" @bind="_IsDone" /></h3>

<button class="btn btn-success" @onclick="EditTask">Edit</button>
</body>
@code
{
    @using System.Net.Http;
    @using Swashbuckle.AspNetCore.Swagger;
    @using Serverlib;
    @using Microsoft.AspNetCore.SignalR.Client;
    
    public string TaskName = "salam" ; 
    public static HttpClient httpClient = new HttpClient();

    private VirtualSwagger virtualSwagger = new VirtualSwagger() ; 
    public Serverlib.swaggerClient Client ;

    public HubConnection connection ; 
    public HubConnection ConnInt ; 
    public bool _IsDone ;
    public string _Name ;

    [Parameter]
    public string ID { get; set; }

    public int _Id ; 
    public string _Description  ; 


    protected override async Task OnInitializedAsync()
    {   
        _Id = int.Parse(ID) ; 
        connection = new HubConnectionBuilder()
        .WithUrl("http://localhost:5000/SR")
        .Build();
        ConnInt = new HubConnectionBuilder()
        .WithUrl("http://localhost:5000/SRInt")
        .Build();
        connection.StartAsync().Wait() ; 
        ConnInt.StartAsync().Wait() ; 
        Client = new Serverlib.swaggerClient("http://localhost:5000/", httpClient); 
        var jobs = Client.GetAllAsync().Result ; 
        foreach(var v in jobs){
            if(v.Id == _Id){
                _Name = v.Name ; 
                _Description = v.Work ; 
            }
        }
    }
    public void EditTask()
    {
        Serverlib.Job job = new Serverlib.Job{Id = _Id , Name = _Name , Work = _Description , Done = _IsDone} ; 
        
        helper.SC[2] = job ; // why it works ? and will be fixed
        Thread.Sleep(1000) ; //will be Asynced
        Navigation.NavigateTo("/TodoList") ; 
    }
}